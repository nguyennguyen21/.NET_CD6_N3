<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBorder1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hRzGoMzCZjG1Yim5b/JVYxP/2Q==
</value>
  </data>
</root>